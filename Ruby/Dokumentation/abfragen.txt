if / Anweisungen
Die Überpüfung einer oder mehrerer Bedingungen findet in if-Blöcken statt. 
Müssen mehrere Bedingungen überprüft werden, dann findet eine verknüpfung mit dem und Operator statt:

	if typ.is_a?(String) && typ.size >= 3
		Es müssen beide Bedingungen true sein, damit die Anweisungen in dem Block ausgeführt werden

Muss von mehreren Bedingungen eine zutreffen ist die Verwendung des Oder-Operators sinnvoll:
	
	if Bediungung1 || bedingung2
		Wenn eine der Bediungen werden die Anweisungen im Block ausgeführt

if -elseif -else -end KONSTRUKT:

			if !typ.is_a?(String) 
				puts "war kein string"
			elsif typ.size >= 3
				puts "Länge passt nicht"	
			else
				@typ = typ.capitalize 
			end

Kurzform der if Anweisung:
	def ps=(ps)
		@ps = ps if ps > 0
	end

	Steht am Ende einer Anweisung (in der gleichen zeile) eine if_Bedigung, dann wird die vorgehende Anweisung(z.B.: Zuordnung eines Wertes) nur ausgeführt, wenn die bedigung true ist. 

Ternärer Operator:
	Es gibt die Möglichkeit einen if else Block in einer Zeile auszuführen:
		puts car.typ.empty? ? "Kein Wert" : car.typ

	Die Anweisung puts, also erzeugen einer Ausgabe, bekommt den Wert "Kein Wert" falls die Bedingung 
	erfüllt ist; bzw. den aktuellen Objekt Wert für typ falls dieser vorhanden ist.

	Das freistehende Fragezeichen ist ein Operator der die linksstehende bedingung von den 
	auszuführenden Anweisungen trennt. 
	Der Doppelpunkt fungiert als die Kurzform von 'else'
	